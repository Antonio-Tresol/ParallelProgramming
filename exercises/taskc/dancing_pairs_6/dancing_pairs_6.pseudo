//  Copyright  2022 A.Badilla Olivas GNU GENERAL PUBLIC LICENSE
procedure main():
  pairLimit := read_int()
  dancingSemaphore := create_semaphore(0)
  manGroup := create_semaphore(0)
  womanGroup := create_semaphore(0)
  danceLimit := create_semaphore(pairLimit * 4)
  shared canWriteCount := create_semaphore(1)
  shared real danceTimeLimit := read_real() // read the minimum time each dancer will dance
  shared real danceTime := random(1000)
  private real timeElapsed := 0
  shared manCount := 0
  shared womanCount := 0
  while true do:
		case read_char() of:
			'M':= create_thread(male)
			'W':= create_thread(female)
			EOF:= return
  end while 
end procedure

procedure male():
  while timeElapsed < danceTimeLimit do:
    // This ensures that there's at least one woman waiting
    lock(canWriteCount)
    manCount := manCount + 1
    if manCount mod 2 = 0 && womanCount mod 2 = 0:
      signal(manGroup)
      signal(manGroup)
      signal(womanGroup)
      signal(womanGroup)
      manCount := 0
      womanCount := 0
    end if
    unlock(canWriteCount)
    wait(manGroup)
    wait(dancingSemaphore)  //  Wait for the dancing semaphore
    wait(danceLimit)  //  Wait for the dance limit semaphore
    dance(danceTime)
    timeElapsed := timeElapsed + danceTime
    signal(danceLimit) //  Signal the dance limit semaphore
  end while
end procedure


procedure female():
  while timeElapsed < danceTimeLimit do:
    lock(canWriteCount)
    womanCount := womanCount + 1
    if manCount mod 2 = 0 && womanCount mod 2 = 0 :
      signal(manGroup)
      signal(manGroup)
      signal(womanGroup)
      signal(womanGroup)
      manCount := 0
      womanCount := 0
    end if
    unlock(canWriteCount)
    wait(womanGroup)
    // This ensures that there's at least one man waiting
    signal(dancingSemaphore)  //  Signal the semaphore
    signal(dancingSemaphore)  //  Signal the semaphore
    wait(dancingSemaphore)  //  Wait for the semaphore
    wait(danceLimit)  //  Wait for the semaphore
    dance(danceTime)
    timeElapsed := timeElapsed + danceTime
    signal(danceLimit) //  Signal the semaphore
  end while
end procedure