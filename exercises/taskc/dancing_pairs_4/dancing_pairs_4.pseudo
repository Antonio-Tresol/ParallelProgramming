//  Copyright  2022 A.Badilla Olivas GNU GENERAL PUBLIC LICENSE
procedure main():
  int pairLimit := read_int()    // we read the limit of pairs that can dance at the same time 
  semaphoreMan := create_semaphore(0) //  We create the semaphore for the men to signal
  semaphoreWoman := create_semaphore(0) //  We create the semaphore for the women to signal
  dancingSemaphore := create_semaphore(0) //  We create the semaphore for the dancing semaphore, it's used to ensure that man and women are dancing at the same time
  danceLimit := create_semaphore(pairLimit * 2) // we create a semaphore initialized to the limit of pairs that can dance at the same time
  shared real danceTime := random(1000) //  We create a random dance time
  while true do: 
    case read_char() of:
      'M' := create_thread(male)
      'W' := create_thread(female)
      EOF := return
  end while 
end procedure

procedure male():
  // This ensures that there's at least one woman waiting
  signal(semaphoreWoman)  //  Signal the woman semaphore
  wait(semaphoreMan)  //  Wait for the man semaphore
  wait(dancingSemaphore)  //  Wait for the dancing semaphore
  wait(danceLimit)  //  Wait for the dance limit semaphore
  dance(danceTime)
  signal(danceLimit) //  Signal the dance limit semaphore
end procedure

procedure female():
  // This ensures that there's at least one man waiting
  signal(semaphoreMan)  //  Signal the semaphore
  wait(semaphoreWoman)  //  Wait for the semaphore
  signal(dancingSemaphore)  //  Signal the semaphore
  signal(dancingSemaphore)  //  Signal the semaphore
  wait(dancingSemaphore)  //  Wait for the semaphore
  wait(danceLimit)  //  Wait for the semaphore
  dance(danceTime)
  signal(danceLimit) //  Signal the semaphore
end procedure