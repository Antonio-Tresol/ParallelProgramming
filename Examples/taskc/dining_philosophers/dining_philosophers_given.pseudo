procedure main(argc, argv[]):
  shared chopsticks[] := create_semaphores(5, 1)

  for id := 0 to 5 do
    create_thread(philosopher, id)
  end for
end procedure

procedure philosopher(id):
  while true do
    think()
    // this initial pseudocode is not correct
    // because in case all five philosophers go to eat at the same time
    // they will all be blocked because they will all try to acquire the
    // chopstick to the right of them but it will be held by another philosopher
    // who is also trying to acquire the chopstick to the right of them and so on
    get_left_chopstick(id)
    get_right_chopstick(id)
    eat()
    put_left_chopstick(id)
    put_right_chopstick(id)
  end while
end procedure

procedure get_left_chopstick(id):
  wait(chopsticks[(id + 1) mod 5])
end procedure

procedure get_right_chopstick(id):
  wait(chopsticks[id])
end procedure

procedure put_left_chopstick(id):
  signal(chopsticks[(id + 1) mod 5])
end procedure

procedure put_right_chopstick(id):
  signal(chopsticks[id])
end procedure